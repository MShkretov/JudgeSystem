@{
    ViewData["Title"] = "Home Page";
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Code Judge Platform</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .task-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
        }

        .task-description {
            background-color: #f9f9f9;
            padding: 10px;
            border: 1px solid #ccc;
        }

        .code-editor {
            width: 100%;
            height: 200px;
            padding: 10px;
            margin-top: 10px;
            border: 1px solid #ccc;
        }

        .run-button {
            display: block;
            margin: 10px auto;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

            .run-button:hover {
                background-color: #0056b3;
            }

        .output-area {
            width: 100%;
            min-height: 100px;
            padding: 10px;
            margin: 5px 0; /* Adjust this line to control the spacing */
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            white-space: pre-wrap;
            overflow: auto;
        }

        .result-points {
            margin-top: 10px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="task-container">
        <h1>Code Judge Platform</h1>

        <div class="task-description">
            <h2>Sum of Two Numbers</h2>
            <p>Write a program that takes two numbers as input and calculates their sum.</p>
            <a href="#" download>Download Description</a>
        </div>

        <h2>Code Editor</h2>
        <textarea class="code-editor" rows="10" cols="50"></textarea>

        <button class="run-button">Run Code</button>

        <h2>Output</h2>
        <pre class="output-area"></pre>

        <div class="result-points">
            Result: <span class="points">0</span> points
        </div>
    </div>

    <div class="task-container">
        <h1>Code Judge Platform</h1>

        <div class="task-description">
            <h2>Find the Maximum</h2>
            <p>Write a program that takes three numbers as input and finds the maximum among them.</p>
            <a href="#" download>Download Description</a>
        </div>

        <h2>Code Editor</h2>
        <textarea class="code-editor" rows="10" cols="50"></textarea>

        <button class="run-button">Run Code</button>

        <h2>Output</h2>
        <pre class="output-area"></pre>

        <div class="result-points">
            Result: <span class="points">0</span> points
        </div>
    </div>

    <div class="task-container">
        <h1>Code Judge Platform</h1>

        <div class="task-description">
            <h2>Calculate Factorial</h2>
            <p>Write a program that calculates the factorial of a given positive integer.</p>
            <a href="#" download>Download Description</a>
        </div>

        <h2>Code Editor</h2>
        <textarea class="code-editor" rows="10" cols="50"></textarea>

        <button class="run-button">Run Code</button>

        <h2>Output</h2>
        <pre class="output-area"></pre>

        <div class="result-points">
            Result: <span class="points">0</span> points
        </div>
    </div>

    <div class="task-container">
        <h1>Code Judge Platform</h1>

        <div class="task-description">
            <h2>Check Prime Number</h2>
            <p>Write a program that checks whether a given number is a prime number or not..</p>
            <a href="#" download>Download Description</a>
        </div>

        <h2>Code Editor</h2>
        <textarea class="code-editor" rows="10" cols="50"></textarea>

        <button class="run-button">Run Code</button>

        <h2>Output</h2>
        <pre class="output-area"></pre>

        <div class="result-points">
            Result: <span class="points">0</span> points
        </div>
    </div>

    <div class="task-container">
        <h1>Code Judge Platform</h1>

        <div class="task-description">
            <h2>Reverse String</h2>
            <p>Write a program that takes a string as input and outputs the reverse of the string..</p>
            <a href="#" download>Download Description</a>
        </div>

        <h2>Code Editor</h2>
        <textarea class="code-editor" rows="10" cols="50"></textarea>

        <button class="run-button">Run Code</button>

        <h2>Output</h2>
        <pre class="output-area"></pre>

        <div class="result-points">
            Result: <span class="points">0</span> points
        </div>
    </div>

    <script>
        const tasks = [
            {
                description: "Sum of Two Numbers",
                examples: [
                    { input: "3 2", output: "5" },
                    { input: "5 7", output: "12" }
                ]
            },
            // Add more tasks and examples...
        ];

        async function runCode(taskIndex) {
            const code = document.querySelectorAll(".code-editor")[taskIndex].value;
            const input = tasks[taskIndex].examples[0].input; // Take the first example input

            // Add input validation here
            if (!isValidInput(input)) {
                alert("Invalid input. Please enter a valid input.");
                return;
            }

            const output = executeCode(code, input);

            const outputElement = document.querySelectorAll(".output-area")[taskIndex];
            const pointsElement = document.querySelectorAll(".points")[taskIndex];

            outputElement.textContent = output;

            // Compare output with expected output
            const expectedOutput = tasks[taskIndex].examples[0].output;
            if (output.trim() === expectedOutput) {
                pointsElement.textContent = "20";
            } else {
                pointsElement.textContent = "0";
            }
        }

        // Add input validation function
        function isValidInput(input) {
            // Implement your input validation logic here
            // For example, check if the input contains valid numbers, etc.
            return true; // Return true if input is valid, false otherwise
        }

        // Simulate code execution with the given input and return output
        function executeCode(code, input) {
            // Replace this with your actual logic to execute the user's code
            // For this example, let's simulate the execution
            return "Output: Result from code execution.";
        }

        const runButtons = document.querySelectorAll(".run-button");
        runButtons.forEach((button, index) => {
            button.addEventListener("click", () => runCode(index));
        });
    </script>
</body>
</html>